import math
# Tungsten Half-Value Layer Calculation Program

#Energy in keV
energy =[1, 1.5, 1.8092, 1.8092, 1.84014, 1.8716, 1.8716, 2, 2.281, 2.281
         ,2.4235, 2.5749, 2.5749, 2.69447, 2.8196, 2.8196, 3, 4, 5, 6, 8
         , 10, 10.2068, 10.2068, 10.8548, 11.544, 11.544, 11.8186, 12.0998
         , 12.0998, 15, 20, 30, 40, 50, 60, 69.525, 69.525, 80, 100, 150, 200
         , 300, 400, 500, 600, 800, 1000, 1250, 1500, 2000, 3000, 4000, 5000
         , 6000, 8000, 10000, 15000, 20000]

#Linear Attenuation Coefficient for Tungsten in cm^-1
coef = [71081.9, 31709.9, 21384.4, 25611.1, 36882.3, 55989.3, 61181, 75694.6
        , 54580.4, 63284.7 , 54676.9, 47188.5, 50160.7, 45142.7, 40607.2, 42344.2
        , 36708.6, 18458.52, 10680.62, 6782.02, 3290.65, 1870.363, 1775.793, 4504.62
        , 3827.19, 3259.77, 4462.16, 4377.24, 3985.45, 4597.26, 2680.77, 1268.589
        , 438.689, 205.931, 114.8157, 71.6609, 49.2536, 216.739, 150.733, 85.6534
        , 30.5133, 15.13892, 6.24934, 3.71525, 2.65954, 2.10949, 1.556738, 1.277274
        , 1.076361, 0.965, 0.855569, 0.786475, 0.779334, 0.791879, 0.81253, 0.863096
        , 0.916171, 1.039112, 1.137349]

erng = float(input("Energy (keV): "))

    
#*******************



#*******************
#Calculate the linear coefficient of attenuation using linear interpolation
#for each gamma-ray energy.

for j in range(len(energy)):
    if energy[j] == erng:
        y3 = coef[j]
    elif energy[j] > erng:
        x3 = energy[j]
        x2 = erng
        x1 = energy[j-1]
        y3 = coef[j]
        y1 = coef[j-1]
        e_coef =(((x2-x1)*(y3-y1))/(x3-x1))+y1 #Linear Interpolation
        break

#*******************
HVL = math.log(1/2)/-e_coef

print("Linear Attenuation Coef: " + str(e_coef) + "(cm^-1)")
print("HVL: " + str(HVL) + "(cm)")
